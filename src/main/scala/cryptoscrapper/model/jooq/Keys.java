/*
 * This file is generated by jOOQ.
 */
package cryptoscrapper.model.jooq;


import cryptoscrapper.model.jooq.tables.Coin;
import cryptoscrapper.model.jooq.tables.CoinDetails;
import cryptoscrapper.model.jooq.tables.records.CoinDetailsRecord;
import cryptoscrapper.model.jooq.tables.records.CoinRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CoinRecord, Integer> IDENTITY_COIN = Identities0.IDENTITY_COIN;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CoinRecord> COIN_PKEY = UniqueKeys0.COIN_PKEY;
    public static final UniqueKey<CoinRecord> COIN_SYMBOL_KEY = UniqueKeys0.COIN_SYMBOL_KEY;
    public static final UniqueKey<CoinDetailsRecord> COIN_DETAILS_COIN_ID_CREATED_KEY = UniqueKeys0.COIN_DETAILS_COIN_ID_CREATED_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CoinDetailsRecord, CoinRecord> COIN_DETAILS__COIN_FK = ForeignKeys0.COIN_DETAILS__COIN_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CoinRecord, Integer> IDENTITY_COIN = Internal.createIdentity(Coin.COIN, Coin.COIN.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CoinRecord> COIN_PKEY = Internal.createUniqueKey(Coin.COIN, "coin_pkey", new TableField[] { Coin.COIN.ID }, true);
        public static final UniqueKey<CoinRecord> COIN_SYMBOL_KEY = Internal.createUniqueKey(Coin.COIN, "coin_symbol_key", new TableField[] { Coin.COIN.SYMBOL }, true);
        public static final UniqueKey<CoinDetailsRecord> COIN_DETAILS_COIN_ID_CREATED_KEY = Internal.createUniqueKey(CoinDetails.COIN_DETAILS, "coin_details_coin_id_created_key", new TableField[] { CoinDetails.COIN_DETAILS.COIN_ID, CoinDetails.COIN_DETAILS.CREATED }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CoinDetailsRecord, CoinRecord> COIN_DETAILS__COIN_FK = Internal.createForeignKey(Keys.COIN_PKEY, CoinDetails.COIN_DETAILS, "coin_fk", new TableField[] { CoinDetails.COIN_DETAILS.COIN_ID }, true);
    }
}
