/*
 * This file is generated by jOOQ.
 */
package cryptoscrapper.model.jooq.tables.records;


import cryptoscrapper.model.jooq.tables.CoinDetails;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoinDetailsRecord extends TableRecordImpl<CoinDetailsRecord> implements Record4<Integer, Integer, BigDecimal, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.coin_details.coin_id</code>.
     */
    public void setCoinId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.coin_details.coin_id</code>.
     */
    public Integer getCoinId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.coin_details.rank</code>.
     */
    public void setRank(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.coin_details.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.coin_details.price_usd</code>.
     */
    public void setPriceUsd(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.coin_details.price_usd</code>.
     */
    public BigDecimal getPriceUsd() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.coin_details.created</code>.
     */
    public void setCreated(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.coin_details.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, BigDecimal, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, BigDecimal, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoinDetails.COIN_DETAILS.COIN_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CoinDetails.COIN_DETAILS.RANK;
    }

    @Override
    public Field<BigDecimal> field3() {
        return CoinDetails.COIN_DETAILS.PRICE_USD;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return CoinDetails.COIN_DETAILS.CREATED;
    }

    @Override
    public Integer component1() {
        return getCoinId();
    }

    @Override
    public Integer component2() {
        return getRank();
    }

    @Override
    public BigDecimal component3() {
        return getPriceUsd();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreated();
    }

    @Override
    public Integer value1() {
        return getCoinId();
    }

    @Override
    public Integer value2() {
        return getRank();
    }

    @Override
    public BigDecimal value3() {
        return getPriceUsd();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreated();
    }

    @Override
    public CoinDetailsRecord value1(Integer value) {
        setCoinId(value);
        return this;
    }

    @Override
    public CoinDetailsRecord value2(Integer value) {
        setRank(value);
        return this;
    }

    @Override
    public CoinDetailsRecord value3(BigDecimal value) {
        setPriceUsd(value);
        return this;
    }

    @Override
    public CoinDetailsRecord value4(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public CoinDetailsRecord values(Integer value1, Integer value2, BigDecimal value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoinDetailsRecord
     */
    public CoinDetailsRecord() {
        super(CoinDetails.COIN_DETAILS);
    }

    /**
     * Create a detached, initialised CoinDetailsRecord
     */
    public CoinDetailsRecord(Integer coinId, Integer rank, BigDecimal priceUsd, OffsetDateTime created) {
        super(CoinDetails.COIN_DETAILS);

        setCoinId(coinId);
        setRank(rank);
        setPriceUsd(priceUsd);
        setCreated(created);
    }
}
